{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nlet countdownInterval;\ndocument.querySelector('[data-start]').disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDate < currentDate) {\n      iziToast.show({\n        title: 'Please',\n        message: ' choose a date in the future',\n        backgroundColor: '#FFA000',\n        messageColor: '#FFFFFF',\n        titleColor: '#FFFFFF',\n      });\n      document.querySelector('[data-start]').disabled = true;\n    } else {\n      document.querySelector('[data-start]').disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\ndocument.querySelector('[data-start]').addEventListener('click', function () {\n  const countdownUpdate = () => {\n    const now = new Date().getTime();\n    const distance = userSelectedDate - now;\n\n    if (distance <= 0) {\n      clearInterval(countdownInterval);\n      document.querySelector('#datetime-picker').disabled = false;\n      document.querySelector('[data-start]').disabled = true;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(distance);\n\n    document.querySelector('[data-days]').innerText = days\n      .toString()\n      .padStart(2, '0');\n    document.querySelector('[data-hours]').innerText = hours\n      .toString()\n      .padStart(2, '0');\n    document.querySelector('[data-minutes]').innerText = minutes\n      .toString()\n      .padStart(2, '0');\n    document.querySelector('[data-seconds]').innerText = seconds\n      .toString()\n      .padStart(2, '0');\n  };\n\n  document.querySelector('#datetime-picker').disabled = true;\n  document.querySelector('[data-start]').disabled = true;\n  countdownUpdate();\n  countdownInterval = setInterval(countdownUpdate, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","countdownInterval","options","selectedDates","iziToast","flatpickr","countdownUpdate","now","distance","days","hours","minutes","seconds","convertMs","ms"],"mappings":"+IAMA,IAAIA,EACAC,EACJ,SAAS,cAAc,cAAc,EAAE,SAAW,GAElD,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAE9BH,EADgB,IAAI,MAEtBI,EAAS,KAAK,CACZ,MAAO,SACP,QAAS,+BACT,gBAAiB,UACjB,aAAc,UACd,WAAY,SACpB,CAAO,EACD,SAAS,cAAc,cAAc,EAAE,SAAW,IAElD,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACH,EAEAC,EAAU,mBAAoBH,CAAO,EAErC,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,UAAY,CAC3E,MAAMI,EAAkB,IAAM,CAC5B,MAAMC,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAWR,EAAmBO,EAEpC,GAAIC,GAAY,EAAG,CACjB,cAAcP,CAAiB,EAC/B,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtD,SAAS,cAAc,cAAc,EAAE,SAAW,GAClD,MACD,CAED,KAAM,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAE5D,SAAS,cAAc,aAAa,EAAE,UAAYC,EAC/C,SAAU,EACV,SAAS,EAAG,GAAG,EAClB,SAAS,cAAc,cAAc,EAAE,UAAYC,EAChD,SAAU,EACV,SAAS,EAAG,GAAG,EAClB,SAAS,cAAc,gBAAgB,EAAE,UAAYC,EAClD,SAAU,EACV,SAAS,EAAG,GAAG,EAClB,SAAS,cAAc,gBAAgB,EAAE,UAAYC,EAClD,SAAU,EACV,SAAS,EAAG,GAAG,CACtB,EAEE,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtD,SAAS,cAAc,cAAc,EAAE,SAAW,GAClDN,IACAL,EAAoB,YAAYK,EAAiB,GAAI,CACvD,CAAC,EAED,SAASO,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}